VP root {
	VP vam {
		Choice C1
		Choice C2
		Choice C3
		Choice C4
		Choice C5
		Choice C6
		Choice C7
		Choice C8
	}
	
	VP vrm {
		import "model.uml"
		
		ObjectExistence V1 {
			object NewModel.ObjectExistenceTest
			choice C1
		}
		
		LinkExistence V2 {
			link NewModel.linkExistenceTestsToSlotAssignmentTests.bar
			choice C2
		}
		
		ObjectSubstitution V3 {
			placement NewModel.ObjectSubstitutionTest
			replacement NewModel.Test
			choice C3
		}
		
		LinkAssignment V4 {
			link NewModel.linkAssignmentTestsToSlotValueExistenceTests.bar
			linkEndIdentifier "ownedEnd"
			newEnd NewModel.linkAssignmentTestsToSlotValueExistenceTests.bar
			choice C4
		}
		
		SlotAssignment V5 {
			slotOwner NewModel.SlotAssignmentTest
			slotIdentifier "name"
			value "NewSlotAssignmentTestName"
			choice C5
		}
		
		SlotValueExistence V6 {
			slotOwner NewModel.SlotValueExistenceTest.propToUnset
			slotIdentifier "name"
			choice C6
		}
		
		PatternFusion V7 {
			bindings BindSubject1, BindWatcher1
			choice C7
		}
		
		RoleBinding BindSubject1 {
			role "/KcvlExamples/model.patterns#_2GQ-4F1REeSqzeBJjpaeLQ"
			target NewModel.PatternFusionTest
		}
		
		RoleBinding BindWatcher1 {
			role "/KcvlExamples/model.patterns#_3C6NUF1REeSqzeBJjpaeLQ"
			target NewModel.WatcherTest
		}
		
		PatternIntegration V8 {
			bindings BindSubject2, BindWatcher2
			choice C8
		}
		
		RoleBinding BindSubject2 {
			role "/KcvlExamples/model.patterns#_2GQ-4F1REeSqzeBJjpaeLQ"
			target NewModel.PatternIntegrationTest
		}
		
		RoleBinding BindWatcher2 {
			role "/KcvlExamples/model.patterns#_3C6NUF1REeSqzeBJjpaeLQ"
			target NewModel.WatcherTest
		}
	}
	
	VP configuration {
		resolution for C1 = true
		resolution for C2 = true
		resolution for C3 = false
		resolution for C4 = false
		resolution for C5 = false
		resolution for C6 = true
		resolution for C7 = false
		resolution for C8 = false
	}
}
